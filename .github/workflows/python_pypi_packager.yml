name: Python PyPI Packager
on:
  workflow_dispatch:
    inputs:
      ecosystem:
        description: 'Ecosystem to package'
        required: true
        default: python
        options:
          - python

      package_name:
        description: 'Package name'
        required: true

      package_version:
        description: 'Package version'
        required: true

permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: write

jobs:
  verify_request:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Verify request
        run: |
          echo "Ecosystem: ${{ github.event.inputs.ecosystem }}"
          echo "Package name: ${{ github.event.inputs.package_name }}"
          echo "Package version: ${{ github.event.inputs.package_version }}"

      - name: Verify build scripts are present
        run: |
          bash scripts/verify_build_request.sh \
            ${{ github.event.inputs.ecosystem }} \
            ${{ github.event.inputs.package_name }} \
            ${{ github.event.inputs.package_version }}

  security_scanning_sast:
    runs-on: ubuntu-latest
    needs: verify_request
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Export Package Target
        shell: bash
        run: |
          source "ecosystems/${{ github.event.inputs.ecosystem }}/${{ github.event.inputs.package_name }}/build.sh"
          source "ecosystems/${{ github.event.inputs.ecosystem }}/${{ github.event.inputs.package_name }}/${{ github.event.inputs.package_version }}/build.sh"

          echo "PKG_GIT_URL=$PKG_GIT_URL" >> $GITHUB_ENV
          echo "PKG_GIT_COMMIT_SHA=$PKG_GIT_COMMIT_SHA" >> $GITHUB_ENV

      - name: Checkout Package Target
        uses: actions/checkout@v2
        with:
          repository: ${{ env.PKG_GIT_URL }}
          ref: ${{ env.PKG_GIT_COMMIT_SHA }}

      - name: Run Semgrep SAST
        run: docker run --rm -v "${PWD}:/src" semgrep/semgrep semgrep --config=p/python --sarif --sarif-output=semgrep.sarif

      - name: Upload Semgrep SAST results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sast
          path: semgrep.sarif
          if-no-files-found: warn

      - name: Upload Semgrep Results to CodeQL
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          categories: "pkg-${{ github.event.inputs.ecosystem }}-${{ github.event.inputs.package_name }}-${{ github.event.inputs.package_version }}"


